#!/usr/bin/python3

# 0. If its not tested its broken
# Run: python-m unittest discover tests

import os
import unittest
from models.base import Base
from models.rectangle import Rectangle
from models.square import Square


#class #0
class ModelInstances(unittest.TestCase):
    """A class to test instances of Base arguments."""
    def test_base(self):
        """Test base."""
        b1 = Base()
        self.assertEqual(b1.id, 1)
        b2 = Base()
        self.assertEqual(b2.id, 2)
        b3 = Base(12)
        self.assertEqual(b3.id, 12)
        b4 = Base()
        self.assertEqual(b4.id, 3)
        b5 = Base(0)
        self.assertEqual(b5.id, 0)
        b6 = Base(-1)
        self.assertEqual(b6.id, -1)
        b7 = Base(3.14)
        self.assertEqual(b7.id, 3.14)
        b8 = Base("string")
        self.assertEqual(b8.id, "string")
        b9 = Base([1, 2, 3])
        self.assertEqual(b9.id, [1, 2, 3])
        b10 = Base((1, 2))
        self.assertEqual(b10.id, (1, 2))
        b11 = Base({"a": 1, "b": 2})
        self.assertEqual(b11.id, {"a": 1, "b": 2})
        b12 = Base(None)
        self.assertEqual(b12.id, 4)
        b13 = Base()
        self.assertEqual(b13.id, 5)
        b14 = Base()
        self.assertEqual(b14.id, 6)
        b15 = Base()
        self.assertEqual(b15.id, 7)
        b16 = Base()
        self.assertEqual(b16.id, 8)
        b17 = Base()
        self.assertEqual(b17.id, 9)
        b18 = Base()
        self.assertEqual(b18.id, 10)
        b19 = Base()
        self.assertEqual(b19.id, 11)
        b20 = Base()
        self.assertEqual(b20.id, 12)
        b21 = Base()
        self.assertEqual(b21.id, 13)
        b22 = Base()
        self.assertEqual(b22.id, 14)
        b23 = Base()
        self.assertEqual(b23.id, 15)
        b24 = Base()
        self.assertEqual(b24.id, 16)
        b25 = Base()
        self.assertEqual(b25.id, 17)
        b26 = Base()
        self.assertEqual(b26.id, 18)
        b27 = Base()
        self.assertEqual(b27.id, 19
    def test_base(self):
        """Test base."""
        b1 = Base()
        self.assertEqual(b1.id, 1)
        b2 = Base()
        self.assertEqual(b2.id, 2)
        b3 = Base(12)
        self.assertEqual(b3.id, 12)
        b4 = Base()
        self.assertEqual(b4.id, 3)
        b5 = Base(0)
        self.assertEqual(b5.id, 0)
        b6 = Base(-1)
        self.assertEqual(b6.id, -1)
        b7 = Base(3.14)
        self.assertEqual(b7.id, 3.14)
        b8 = Base("string")
        self.assertEqual(b8.id, "string")
        b9 = Base([1, 2, 3])
        self.assertEqual(b9.id, [1, 2, 3])
        b10 = Base((1, 2))
        self.assertEqual(b10.id, (1, 2))
        b11 = Base({"a": 1, "b": 2})
        self.assertEqual(b11.id, {"a": 1, "b": 2})
        b12 = Base(None)
        self.assertEqual(b12.id, 4)
        b13 = Base()
        self.assertEqual(b13.id, 5)
        b14 = Base()
        self.assertEqual(b14.id, 6)
        b15 = Base()
        self.assertEqual(b15.id, 7)
        b16 = Base()
        self.assertEqual(b16.id, 8)
        b17 = Base()
        self.assertEqual(b17.id, 9)
        b18 = Base()
        self.assertEqual(b18.id, 10)
        b19 = Base()
        self.assertEqual(b19.id, 11)
        b20 = Base()
        self.assertEqual(b20.id, 12)
        b21 = Base()
        self.assertEqual(b21.id, 13)
        b22 = Base()
        self.assertEqual(b22.id, 14)
        b23 = Base()
        self.assertEqual(b23.id, 15)
        b24 = Base()
        self.assertEqual(b24.id, 16)
        b25 = Base()
        self.assertEqual(b25.id, 17)
        b26 = Base()
        self.assertEqual(b26.id, 18)
        b27 = Base()